generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model user {
  id             String           @id @default(uuid())
  email          String
  userPermission userPermission[]
  createdAt      DateTime         @default(now()) @db.Timestamp
  updatedAt      DateTime         @default(now()) @db.Timestamp
}

model machine {
  id        String   @id @default(uuid())
  name      String
  token     String
  usage     usage[]
  createdAt DateTime @default(now()) @db.Timestamp
  updatedAt DateTime @default(now()) @db.Timestamp
}

model usage {
  id         Int      @id @default(autoincrement())
  cpu        Float
  memory     Float
  disk       Float
  machine    String
  machineRef machine? @relation(fields: [machine], references: [id])
  createdAt  DateTime @default(now()) @db.Timestamp
  updatedAt  DateTime @default(now()) @db.Timestamp
}

enum permissionGroupEnum {
  DASHBOARD
}

model permissionGroup {
  id         permissionGroupEnum @id
  label      String
  permission permission[]
  createdAt  DateTime            @default(now()) @db.Timestamp
  updatedAt  DateTime            @default(now()) @db.Timestamp
}

enum permissionEnum {
  DASHBOARD_VIEW
}

model permission {
  id                 permissionEnum      @id
  label              String
  permissionGroupRef permissionGroup?    @relation(fields: [permissionGroup], references: [id])
  permissionGroup    permissionGroupEnum
  userPermission     userPermission[]
  createdAt          DateTime            @default(now()) @db.Timestamp
  updatedAt          DateTime            @default(now()) @db.Timestamp
}

model userPermission {
  fingerprint   String         @id // userId + permissionGroupId
  userRef       user?          @relation(fields: [user], references: [id])
  user          String
  permissionRef permission?    @relation(fields: [permission], references: [id])
  permission    permissionEnum
  createdAt     DateTime       @default(now()) @db.Timestamp
  updatedAt     DateTime       @default(now()) @db.Timestamp
}
